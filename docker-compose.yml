version: "3.3"
 
services:

  gw:
    build:
      context: .
      dockerfile: docker/gw/Dockerfile
    ports:
      - 10080:80
      - 8080:80
      - 80:80
    volumes:
      - ./docker/gw/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      TZ: "Asia/Tokyo"
    networks:
      web_segment:
        ipv4_address: 172.50.0.2

  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    tty: true
    ports:
      - "18080:8080"
    volumes:
      - ./go:/go
      - ./go_work:/go_work
    environment:
      TZ: "Asia/Tokyo"
    depends_on:
      - db
    networks:
      web_segment:
        ipv4_address: 172.50.0.3

  db:
    build:
      context: .
      dockerfile: docker/mysql/Dockerfile
    volumes:
      - ./docker/mysql/db:/docker-entrypoint-initdb.d
      - db-store:/var/lib/mysql
      - ./logs:/var/log/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "13306:3306" 
    environment:
      MYSQL_ROOT_PASSWORD: T6mWF8vt
      MYSQL_USER: guest
      MYSQL_PASSWORD: T6mWF8vt
      MYSQL_DATABASE: default_database
      TZ: "Asia/Tokyo"
    networks:
      web_segment:
        ipv4_address: 172.50.0.4

networks:
  web_segment:
    driver: bridge
    ipam:
      config:
      - subnet: 172.50.0.0/24

volumes:
  db-store:
